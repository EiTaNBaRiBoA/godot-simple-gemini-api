[gd_scene load_steps=11 format=3 uid="uid://bcvnx7d807lpr"]

[sub_resource type="GDScript" id="GDScript_fxkfc"]
script/source = "extends Control


#see https://ai.google.dev/tutorials/rest_quickstart

var api_key = \"\"
var http_request
var conversations = []
var last_user_prompt
@export var target_model = \"v1beta/models/gemini-1.5-pro-latest\"
func _ready():
	var settings = JSON.parse_string(FileAccess.get_file_as_string(\"res://settings.json\"))
	api_key = settings.api_key
	http_request = HTTPRequest.new()
	add_child(http_request)
	http_request.connect(\"request_completed\", _on_request_completed)

	var  option_keys = [\"SexuallyExplicit\",\"HateSpeech\",\"Harassment\",\"DangerousContent\"]
	for key in option_keys:
		var option = find_child(key+\"OptionButton\")
		option.add_item(\"BLOCK_NONE\")
		option.add_item(\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\")
		option.add_item(\"BLOCK_LOW_AND_ABOVE\")
		option.add_item(\"BLOCK_MEDIUM_AND_ABOVE\")
		option.add_item(\"BLOCK_ONLY_HIGH\")
		
	var name = target_model.split(\"/\")[-1]
	find_child(\"ModelName\").text = name
	#conversations.append({\"user\":\"I am aki\",\"model\":\"Hello aki\"})
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass

func _get_option_selected_text(key):
	var option = find_child(key+\"OptionButton\")
	var text = option.get_item_text(option.get_selected_id())
	return  text

func _on_send_button_pressed():
	find_child(\"SendButton\").disabled = true
	var input = find_child(\"InputEdit\").text
	_request_chat(input)

func _request_chat(prompt):
	
	var url = \"https://generativelanguage.googleapis.com/%s:generateContent?key=%s\"%[target_model,api_key]
	print(url)
	var contents_value = []
	for conversation in conversations:
		contents_value.append({
			\"role\":\"user\",
			\"parts\":[{\"text\":conversation[\"user\"]}]
		})
		contents_value.append({
			\"role\":\"model\",
			\"parts\":[{\"text\":conversation[\"model\"]}]
		})
		
	contents_value.append({
			\"role\":\"user\",
			\"parts\":[{\"text\":prompt}]
		})
	var body = JSON.new().stringify({
		\"contents\":contents_value,
		\"tools\": [
	{
	  \"codeExecution\": {},
	},
  ]
		,# basically useless,just they say 'I cant talk about that.'
		\"safety_settings\":[
			{
			\"category\": \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",
			\"threshold\": _get_option_selected_text(\"SexuallyExplicit\"),
			},
			{
			\"category\": \"HARM_CATEGORY_HATE_SPEECH\",
			\"threshold\": _get_option_selected_text(\"HateSpeech\"),
			},
			{
			\"category\": \"HARM_CATEGORY_HARASSMENT\",
			\"threshold\": _get_option_selected_text(\"Harassment\"),
			},
			{
			\"category\": \"HARM_CATEGORY_DANGEROUS_CONTENT\",
			\"threshold\": _get_option_selected_text(\"DangerousContent\"),
			},
			]
	})
	last_user_prompt = prompt
	print(\"send-content\"+str(body))
	var error = http_request.request(url, [\"Content-Type: application/json\"], HTTPClient.METHOD_POST, body)
	
	if error != OK:
		push_error(\"requested but error happen code = %s\"%error)

func _set_label_text(key,text):
	var label = find_child(key)
	if text == \"HIGH\":
		label.get_label_settings().set_font_color(Color(1,0,0,1))
	else:
		label.get_label_settings().set_font_color(Color(1,1,1,1))
	label.text = text
func _on_request_completed(result, responseCode, headers, body):
	find_child(\"SendButton\").disabled = false
	var json = JSON.new()
	json.parse(body.get_string_from_utf8())
	var response = json.get_data()
	print(\"response\")
	print(response)
	
	if response == null:
		print(\"response is null\")
		find_child(\"FinishedLabel\").text = \"No Response\"
		find_child(\"FinishedLabel\").visible = true
		return
	
	
	if response.has(\"promptFeedback\"):
		var ratings = response.promptFeedback.safetyRatings
		for rate in ratings:
			match rate.category:
				\"HARM_CATEGORY_SEXUALLY_EXPLICIT\":
					_set_label_text(\"SexuallyExplicitStatus\",rate.probability)
					
				\"HARM_CATEGORY_HATE_SPEECH\":
					_set_label_text(\"HateSpeechStatus\",rate.probability)
					
				\"HARM_CATEGORY_HARASSMENT\":
					_set_label_text(\"HarassmentStatus\",rate.probability)
					
				\"HARM_CATEGORY_DANGEROUS_CONTENT\":
					_set_label_text(\"DangerousContentStatus\",rate.probability)
					
	
	if response.has(\"error\"):
		find_child(\"FinishedLabel\").text = \"ERROR\"
		find_child(\"FinishedLabel\").visible = true
		find_child(\"ResponseEdit\").text = str(response.error)
		#maybe blocked
		return
	
	#No Answer
	if !response.has(\"candidates\"):
		find_child(\"FinishedLabel\").text = \"Blocked\"
		find_child(\"FinishedLabel\").visible = true
		find_child(\"ResponseEdit\").text = \"\"
		#maybe blocked
		return
		
	#I can not talk about
	if response.candidates[0].finishReason != \"STOP\":
		find_child(\"FinishedLabel\").text = \"Safety\"
		find_child(\"FinishedLabel\").visible = true
		find_child(\"ResponseEdit\").text = \"\"
	else:
		find_child(\"FinishedLabel\").text = \"\"
		find_child(\"FinishedLabel\").visible = false
		var newStr = \"\"
		for item in  response.candidates[0].content.parts:
			if item.has(\"executableCode\"):
				newStr+=\"<Start executableCode>\\n\"
				newStr+=item.executableCode.code
				newStr+=\"</End executableCode>\\n\"
			elif item.has(\"codeExecutionResult\"):
				newStr+=\"<Start codeExecutionResult>\\n\"
				newStr+=item.codeExecutionResult.output
				newStr+=\"</End codeExecutionResult>\\n\"
			elif item.has(\"text\"):
				newStr+=\"<Start Text>\\n\"
				newStr+=item.text
				newStr+=\"</End Text>\\n\"
			
			
		#var newStr = response.candidates[0].content.parts[0].text
		#print(find_child(\"ResponseEdit\"))
		find_child(\"ResponseEdit\").text = newStr
		conversations.append({\"user\":\"%s\"%last_user_prompt,\"model\":\"%s\"%newStr})
	
"

[sub_resource type="LabelSettings" id="LabelSettings_6qyb2"]
font_color = Color(1, 0, 0, 1)

[sub_resource type="LabelSettings" id="LabelSettings_u2cd3"]
font_size = 13

[sub_resource type="LabelSettings" id="LabelSettings_ach21"]
font_size = 13

[sub_resource type="LabelSettings" id="LabelSettings_djnfv"]
font_size = 13

[sub_resource type="LabelSettings" id="LabelSettings_urr3g"]
font_size = 13

[sub_resource type="LabelSettings" id="LabelSettings_v1t8f"]
font_size = 13

[sub_resource type="LabelSettings" id="LabelSettings_7gwuk"]
font_size = 13

[sub_resource type="LabelSettings" id="LabelSettings_uo211"]
font_size = 13

[sub_resource type="LabelSettings" id="LabelSettings_www2n"]
font_size = 13

[node name="Control" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_fxkfc")
target_model = "v1beta/models/gemini-1.5-flash-latest"

[node name="MarginContainer" type="MarginContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 8
theme_override_constants/margin_top = 8
theme_override_constants/margin_right = 8
theme_override_constants/margin_bottom = 8

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
text = "User"

[node name="HBoxContainer" type="HBoxContainer" parent="MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="InputEdit" type="TextEdit" parent="MarginContainer/VBoxContainer/HBoxContainer"]
custom_minimum_size = Vector2(240, 280)
layout_mode = 2
size_flags_horizontal = 3
text = "'What is the sum of the first 50 prime numbers? ' +
    'Generate and run code for the calculation, and make sure you get all 50.',"
wrap_mode = 1

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer/VBoxContainer/HBoxContainer"]
custom_minimum_size = Vector2(200, 0)
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2
text = "SexuallyExplicit"
horizontal_alignment = 1

[node name="SexuallyExplicitOptionButton" type="OptionButton" parent="MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="Label2" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2
text = "HateSpeech"
horizontal_alignment = 1

[node name="HateSpeechOptionButton" type="OptionButton" parent="MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="Label3" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2
text = "Harassment"
horizontal_alignment = 1

[node name="HarassmentOptionButton" type="OptionButton" parent="MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="Label4" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2
text = "DangerousContent"
horizontal_alignment = 1

[node name="DangerousContentOptionButton" type="OptionButton" parent="MarginContainer/VBoxContainer/HBoxContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="HBoxContainer5" type="HBoxContainer" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
alignment = 1

[node name="SendButton" type="Button" parent="MarginContainer/VBoxContainer/HBoxContainer5"]
custom_minimum_size = Vector2(400, 0)
layout_mode = 2
text = "Send"

[node name="HBoxContainer3" type="HBoxContainer" parent="MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="Label2" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer3"]
layout_mode = 2
text = "Model"

[node name="FinishedLabel" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer3"]
visible = false
layout_mode = 2
label_settings = SubResource("LabelSettings_6qyb2")

[node name="ModelName" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer3"]
layout_mode = 2

[node name="HBoxContainer2" type="HBoxContainer" parent="MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer/VBoxContainer/HBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer2/VBoxContainer"]
layout_mode = 2
text = "Content"
horizontal_alignment = 1

[node name="ResponseEdit" type="TextEdit" parent="MarginContainer/VBoxContainer/HBoxContainer2/VBoxContainer"]
custom_minimum_size = Vector2(250, 280)
layout_mode = 2
size_flags_horizontal = 3
editable = false
wrap_mode = 1

[node name="VBoxContainer2" type="VBoxContainer" parent="MarginContainer/VBoxContainer/HBoxContainer2"]
visible = false
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer2/VBoxContainer2"]
layout_mode = 2
text = "Code"
horizontal_alignment = 1

[node name="ExecutableCodeEdit" type="TextEdit" parent="MarginContainer/VBoxContainer/HBoxContainer2/VBoxContainer2"]
custom_minimum_size = Vector2(250, 280)
layout_mode = 2
size_flags_horizontal = 3
editable = false
wrap_mode = 1

[node name="VBoxContainer3" type="VBoxContainer" parent="MarginContainer/VBoxContainer/HBoxContainer2"]
visible = false
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer2/VBoxContainer3"]
layout_mode = 2
text = "Result"
horizontal_alignment = 1

[node name="CodeExecutionResultEdit" type="TextEdit" parent="MarginContainer/VBoxContainer/HBoxContainer2/VBoxContainer3"]
custom_minimum_size = Vector2(250, 280)
layout_mode = 2
size_flags_horizontal = 3
editable = false
wrap_mode = 1

[node name="HBoxContainer4" type="HBoxContainer" parent="MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="MarginContainer/VBoxContainer/HBoxContainer4"]
custom_minimum_size = Vector2(180, 0)
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer4/HBoxContainer"]
layout_mode = 2
text = "SexuallyExplicit"
label_settings = SubResource("LabelSettings_u2cd3")
horizontal_alignment = 1

[node name="SexuallyExplicitStatus" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer4/HBoxContainer"]
layout_mode = 2
label_settings = SubResource("LabelSettings_ach21")
horizontal_alignment = 1

[node name="HBoxContainer2" type="HBoxContainer" parent="MarginContainer/VBoxContainer/HBoxContainer4"]
custom_minimum_size = Vector2(180, 0)
layout_mode = 2
size_flags_horizontal = 3

[node name="Label2" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer4/HBoxContainer2"]
layout_mode = 2
text = "HateSpeech"
label_settings = SubResource("LabelSettings_djnfv")
horizontal_alignment = 1

[node name="HateSpeechStatus" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer4/HBoxContainer2"]
layout_mode = 2
label_settings = SubResource("LabelSettings_urr3g")
horizontal_alignment = 1

[node name="HBoxContainer3" type="HBoxContainer" parent="MarginContainer/VBoxContainer/HBoxContainer4"]
custom_minimum_size = Vector2(180, 0)
layout_mode = 2
size_flags_horizontal = 3

[node name="Label3" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer4/HBoxContainer3"]
layout_mode = 2
text = "Harassment"
label_settings = SubResource("LabelSettings_v1t8f")
horizontal_alignment = 1

[node name="HarassmentStatus" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer4/HBoxContainer3"]
layout_mode = 2
text = "NEGLIGIBLE"
label_settings = SubResource("LabelSettings_7gwuk")
horizontal_alignment = 1

[node name="HBoxContainer4" type="HBoxContainer" parent="MarginContainer/VBoxContainer/HBoxContainer4"]
custom_minimum_size = Vector2(180, 0)
layout_mode = 2
size_flags_horizontal = 3

[node name="Label4" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer4/HBoxContainer4"]
layout_mode = 2
text = "DangerousContent"
label_settings = SubResource("LabelSettings_uo211")
horizontal_alignment = 1

[node name="DangerousContentStatus" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer4/HBoxContainer4"]
layout_mode = 2
text = "NEGLIGIBLE"
label_settings = SubResource("LabelSettings_www2n")
horizontal_alignment = 1

[connection signal="pressed" from="MarginContainer/VBoxContainer/HBoxContainer5/SendButton" to="." method="_on_send_button_pressed"]
